# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'AWRI-GUI.ui'
#
# Created by: PyQt5 UI code generator 5.13.0
#
# WARNING! All changes made in this file will be lost!


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(804, 595)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.tabBox = QtWidgets.QTabWidget(self.centralwidget)
        self.tabBox.setGeometry(QtCore.QRect(20, 20, 751, 451))
        self.tabBox.setObjectName("tabBox")
        self.tabEstimator = QtWidgets.QWidget()
        self.tabEstimator.setObjectName("tabEstimator")
        self.markedFirstCatchTitle = QtWidgets.QLabel(self.tabEstimator)
        self.markedFirstCatchTitle.setGeometry(QtCore.QRect(20, 40, 191, 41))
        self.markedFirstCatchTitle.setObjectName("markedFirstCatchTitle")
        self.caughtSecondCatchTitle = QtWidgets.QLabel(self.tabEstimator)
        self.caughtSecondCatchTitle.setGeometry(QtCore.QRect(380, 40, 201, 41))
        self.caughtSecondCatchTitle.setObjectName("caughtSecondCatchTitle")
        self.estimatePopulationButton = QtWidgets.QPushButton(self.tabEstimator)
        self.estimatePopulationButton.setGeometry(QtCore.QRect(570, 370, 161, 41))
        self.estimatePopulationButton.setObjectName("estimatePopulationButton")
        self.resultScreenOne = QtWidgets.QTextEdit(self.tabEstimator)
        self.resultScreenOne.setGeometry(QtCore.QRect(10, 160, 721, 191))
        self.resultScreenOne.setObjectName("resultScreenOne")
        self.titleFirstTab = QtWidgets.QLabel(self.tabEstimator)
        self.titleFirstTab.setGeometry(QtCore.QRect(10, 10, 221, 16))
        self.titleFirstTab.setAutoFillBackground(False)
        self.titleFirstTab.setObjectName("titleFirstTab")
        self.resultTitle = QtWidgets.QLabel(self.tabEstimator)
        self.resultTitle.setGeometry(QtCore.QRect(10, 140, 81, 16))
        self.resultTitle.setObjectName("resultTitle")
        self.markedSecondCatchTitle = QtWidgets.QLabel(self.tabEstimator)
        self.markedSecondCatchTitle.setGeometry(QtCore.QRect(380, 80, 201, 41))
        self.markedSecondCatchTitle.setObjectName("markedSecondCatchTitle")
        self.markedFirstCatchInput = QtWidgets.QSpinBox(self.tabEstimator)
        self.markedFirstCatchInput.setGeometry(QtCore.QRect(210, 50, 91, 22))
        self.markedFirstCatchInput.setMinimum(1)
        self.markedFirstCatchInput.setMaximum(1000000)
        self.markedFirstCatchInput.setProperty("value", 1)
        self.markedFirstCatchInput.setObjectName("markedFirstCatchInput")
        self.caughtSecondCatchInput = QtWidgets.QSpinBox(self.tabEstimator)
        self.caughtSecondCatchInput.setGeometry(QtCore.QRect(620, 50, 101, 22))
        self.caughtSecondCatchInput.setMinimum(0)
        self.caughtSecondCatchInput.setMaximum(1000000)
        self.caughtSecondCatchInput.setProperty("value", 0)
        self.caughtSecondCatchInput.setObjectName("caughtSecondCatchInput")
        self.markedSecondCatchInput = QtWidgets.QSpinBox(self.tabEstimator)
        self.markedSecondCatchInput.setGeometry(QtCore.QRect(620, 100, 101, 22))
        self.markedSecondCatchInput.setMinimum(0)
        self.markedSecondCatchInput.setMaximum(1000000)
        self.markedSecondCatchInput.setProperty("value", 0)
        self.markedSecondCatchInput.setObjectName("markedSecondCatchInput")
        self.clearResultsScreenButton = QtWidgets.QPushButton(self.tabEstimator)
        self.clearResultsScreenButton.setGeometry(QtCore.QRect(390, 370, 161, 41))
        self.clearResultsScreenButton.setObjectName("clearResultsScreenButton")
        self.tabBox.addTab(self.tabEstimator, "")
        self.tabSimulator = QtWidgets.QWidget()
        self.tabSimulator.setObjectName("tabSimulator")
        self.totalPopulationTitle = QtWidgets.QLabel(self.tabSimulator)
        self.totalPopulationTitle.setGeometry(QtCore.QRect(10, 10, 151, 41))
        self.totalPopulationTitle.setObjectName("totalPopulationTitle")
        self.totalPopulationInput = QtWidgets.QSpinBox(self.tabSimulator)
        self.totalPopulationInput.setGeometry(QtCore.QRect(180, 20, 91, 22))
        self.totalPopulationInput.setMinimum(1)
        self.totalPopulationInput.setMaximum(1000000)
        self.totalPopulationInput.setProperty("value", 1)
        self.totalPopulationInput.setObjectName("totalPopulationInput")
        self.checkBoxClosedPopulation = QtWidgets.QCheckBox(self.tabSimulator)
        self.checkBoxClosedPopulation.setGeometry(QtCore.QRect(290, 20, 111, 21))
        self.checkBoxClosedPopulation.setObjectName("checkBoxClosedPopulation")
        self.checkBoxOpenPopulation = QtWidgets.QCheckBox(self.tabSimulator)
        self.checkBoxOpenPopulation.setGeometry(QtCore.QRect(440, 20, 211, 21))
        self.checkBoxOpenPopulation.setObjectName("checkBoxOpenPopulation")
        self.captureProbabilityTitle = QtWidgets.QLabel(self.tabSimulator)
        self.captureProbabilityTitle.setGeometry(QtCore.QRect(10, 60, 151, 41))
        self.captureProbabilityTitle.setObjectName("captureProbabilityTitle")
        self.tagLossTitle = QtWidgets.QLabel(self.tabSimulator)
        self.tagLossTitle.setGeometry(QtCore.QRect(10, 110, 151, 41))
        self.tagLossTitle.setObjectName("tagLossTitle")
        self.runSimulationButton = QtWidgets.QPushButton(self.tabSimulator)
        self.runSimulationButton.setGeometry(QtCore.QRect(570, 370, 161, 41))
        self.runSimulationButton.setObjectName("runSimulationButton")
        self.stopSimulationButton = QtWidgets.QPushButton(self.tabSimulator)
        self.stopSimulationButton.setGeometry(QtCore.QRect(400, 370, 161, 41))
        self.stopSimulationButton.setObjectName("stopSimulationButton")
        self.captureProbabilityInput = QtWidgets.QDoubleSpinBox(self.tabSimulator)
        self.captureProbabilityInput.setGeometry(QtCore.QRect(180, 70, 91, 22))
        self.captureProbabilityInput.setObjectName("captureProbabilityInput")
        self.checkBoxCaptureEqual = QtWidgets.QCheckBox(self.tabSimulator)
        self.checkBoxCaptureEqual.setGeometry(QtCore.QRect(290, 70, 151, 21))
        self.checkBoxCaptureEqual.setObjectName("checkBoxCaptureEqual")
        self.checkBoxCaptureVary = QtWidgets.QCheckBox(self.tabSimulator)
        self.checkBoxCaptureVary.setGeometry(QtCore.QRect(440, 70, 151, 21))
        self.checkBoxCaptureVary.setObjectName("checkBoxCaptureVary")
        self.checkBoxCpatureRandom = QtWidgets.QCheckBox(self.tabSimulator)
        self.checkBoxCpatureRandom.setGeometry(QtCore.QRect(590, 70, 151, 21))
        self.checkBoxCpatureRandom.setObjectName("checkBoxCpatureRandom")
        self.tagLossProbabilityInput = QtWidgets.QDoubleSpinBox(self.tabSimulator)
        self.tagLossProbabilityInput.setGeometry(QtCore.QRect(180, 120, 91, 22))
        self.tagLossProbabilityInput.setObjectName("tagLossProbabilityInput")
        self.checkBoxNoTagLoss = QtWidgets.QCheckBox(self.tabSimulator)
        self.checkBoxNoTagLoss.setGeometry(QtCore.QRect(290, 120, 141, 21))
        self.checkBoxNoTagLoss.setObjectName("checkBoxNoTagLoss")
        self.numTrialsTitle = QtWidgets.QLabel(self.tabSimulator)
        self.numTrialsTitle.setGeometry(QtCore.QRect(140, 370, 91, 41))
        self.numTrialsTitle.setObjectName("numTrialsTitle")
        self.numTrialsInput = QtWidgets.QSpinBox(self.tabSimulator)
        self.numTrialsInput.setGeometry(QtCore.QRect(250, 380, 131, 22))
        self.numTrialsInput.setMinimum(1)
        self.numTrialsInput.setMaximum(1000000)
        self.numTrialsInput.setProperty("value", 1)
        self.numTrialsInput.setObjectName("numTrialsInput")
        self.tabBox.addTab(self.tabSimulator, "")
        self.tabResults = QtWidgets.QWidget()
        self.tabResults.setObjectName("tabResults")
        self.MplWidget = MplWidget(self.tabResults)
        self.MplWidget.setGeometry(QtCore.QRect(10, 10, 721, 401))
        self.MplWidget.setObjectName("MplWidget")
        self.tabBox.addTab(self.tabResults, "")
        self.saveResultsButton = QtWidgets.QPushButton(self.centralwidget)
        self.saveResultsButton.setGeometry(QtCore.QRect(610, 490, 161, 41))
        self.saveResultsButton.setObjectName("saveResultsButton")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 804, 21))
        self.menubar.setObjectName("menubar")
        self.menuMain = QtWidgets.QMenu(self.menubar)
        self.menuMain.setObjectName("menuMain")
        self.menuResults = QtWidgets.QMenu(self.menubar)
        self.menuResults.setObjectName("menuResults")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.menubar.addAction(self.menuMain.menuAction())
        self.menubar.addAction(self.menuResults.menuAction())

        self.retranslateUi(MainWindow)
        self.tabBox.setCurrentIndex(1)
        self.clearResultsScreenButton.clicked.connect(self.resultScreenOne.clear)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "AWRI | Mark Recapture Population Estimator v1.2019"))
        self.markedFirstCatchTitle.setText(_translate("MainWindow", "# of Fishes Marked in First Catch (M):"))
        self.caughtSecondCatchTitle.setText(_translate("MainWindow", "# of Fishes Caught in Second Catch (N):"))
        self.estimatePopulationButton.setText(_translate("MainWindow", "Estimate Population"))
        self.resultScreenOne.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p></body></html>"))
        self.titleFirstTab.setText(_translate("MainWindow", "Lincoln Peterson (Chapman\'s) Estimator"))
        self.resultTitle.setText(_translate("MainWindow", "Results"))
        self.markedSecondCatchTitle.setText(_translate("MainWindow", "# of Fishes Marked in Second Catch (R):"))
        self.clearResultsScreenButton.setText(_translate("MainWindow", "Clear Results Screen"))
        self.tabBox.setTabText(self.tabBox.indexOf(self.tabEstimator), _translate("MainWindow", "Lincoln-Peterson (Chapman\'s) Estimator"))
        self.totalPopulationTitle.setText(_translate("MainWindow", "Total Fish Population in Reach:"))
        self.checkBoxClosedPopulation.setText(_translate("MainWindow", "Closed Population"))
        self.checkBoxOpenPopulation.setText(_translate("MainWindow", "Open Population (Mortality / in out)"))
        self.captureProbabilityTitle.setText(_translate("MainWindow", "Capture Probability:"))
        self.tagLossTitle.setText(_translate("MainWindow", "Tag Loss Probability:"))
        self.runSimulationButton.setText(_translate("MainWindow", "Run Simulation"))
        self.stopSimulationButton.setText(_translate("MainWindow", "Stop Simulation"))
        self.checkBoxCaptureEqual.setText(_translate("MainWindow", "Equal Between Samples"))
        self.checkBoxCaptureVary.setText(_translate("MainWindow", "Varies Between Samples"))
        self.checkBoxCpatureRandom.setText(_translate("MainWindow", "Randomize"))
        self.checkBoxNoTagLoss.setText(_translate("MainWindow", "No Tag Loss"))
        self.numTrialsTitle.setText(_translate("MainWindow", "Number of Trials:"))
        self.tabBox.setTabText(self.tabBox.indexOf(self.tabSimulator), _translate("MainWindow", "Raw Simulation"))
        self.tabBox.setTabText(self.tabBox.indexOf(self.tabResults), _translate("MainWindow", "Results"))
        self.saveResultsButton.setText(_translate("MainWindow", "Save Results"))
        self.menuMain.setTitle(_translate("MainWindow", "File"))
        self.menuResults.setTitle(_translate("MainWindow", "Options"))
from mplwidget import MplWidget


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
