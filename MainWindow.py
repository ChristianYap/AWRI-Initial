# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'AWRI-GUI.ui'
#
# Created by: PyQt5 UI code generator 5.13.0
#
# WARNING! All changes made in this file will be lost!


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.setEnabled(True)
        MainWindow.resize(1135, 815)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")
        self.tabBox = QtWidgets.QTabWidget(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("Yu Gothic UI Semibold")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.tabBox.setFont(font)
        self.tabBox.setObjectName("tabBox")
        self.tabEstimator = QtWidgets.QWidget()
        self.tabEstimator.setObjectName("tabEstimator")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.tabEstimator)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.estimatePopulationButton = QtWidgets.QPushButton(self.tabEstimator)
        self.estimatePopulationButton.setObjectName("estimatePopulationButton")
        self.gridLayout_2.addWidget(self.estimatePopulationButton, 5, 3, 1, 2)
        self.markedSecondCatchInput = QtWidgets.QSpinBox(self.tabEstimator)
        self.markedSecondCatchInput.setMinimum(0)
        self.markedSecondCatchInput.setMaximum(1000000)
        self.markedSecondCatchInput.setProperty("value", 0)
        self.markedSecondCatchInput.setObjectName("markedSecondCatchInput")
        self.gridLayout_2.addWidget(self.markedSecondCatchInput, 2, 4, 1, 1)
        self.titleFirstTab = QtWidgets.QLabel(self.tabEstimator)
        self.titleFirstTab.setAutoFillBackground(False)
        self.titleFirstTab.setObjectName("titleFirstTab")
        self.gridLayout_2.addWidget(self.titleFirstTab, 0, 0, 1, 2)
        self.resultScreenOne = QtWidgets.QTextEdit(self.tabEstimator)
        self.resultScreenOne.setObjectName("resultScreenOne")
        self.gridLayout_2.addWidget(self.resultScreenOne, 4, 0, 1, 5)
        self.resultTitle = QtWidgets.QLabel(self.tabEstimator)
        self.resultTitle.setObjectName("resultTitle")
        self.gridLayout_2.addWidget(self.resultTitle, 3, 0, 1, 1)
        self.clearResultsScreenButton = QtWidgets.QPushButton(self.tabEstimator)
        self.clearResultsScreenButton.setObjectName("clearResultsScreenButton")
        self.gridLayout_2.addWidget(self.clearResultsScreenButton, 5, 2, 1, 1)
        self.markedFirstCatchInput = QtWidgets.QSpinBox(self.tabEstimator)
        self.markedFirstCatchInput.setMinimum(1)
        self.markedFirstCatchInput.setMaximum(1000000)
        self.markedFirstCatchInput.setProperty("value", 1)
        self.markedFirstCatchInput.setObjectName("markedFirstCatchInput")
        self.gridLayout_2.addWidget(self.markedFirstCatchInput, 1, 1, 2, 1)
        self.markedFirstCatchTitle = QtWidgets.QLabel(self.tabEstimator)
        self.markedFirstCatchTitle.setObjectName("markedFirstCatchTitle")
        self.gridLayout_2.addWidget(self.markedFirstCatchTitle, 1, 0, 2, 1)
        self.caughtSecondCatchInput = QtWidgets.QSpinBox(self.tabEstimator)
        self.caughtSecondCatchInput.setMinimum(0)
        self.caughtSecondCatchInput.setMaximum(1000000)
        self.caughtSecondCatchInput.setProperty("value", 0)
        self.caughtSecondCatchInput.setObjectName("caughtSecondCatchInput")
        self.gridLayout_2.addWidget(self.caughtSecondCatchInput, 0, 4, 2, 1)
        self.markedSecondCatchTitle = QtWidgets.QLabel(self.tabEstimator)
        self.markedSecondCatchTitle.setObjectName("markedSecondCatchTitle")
        self.gridLayout_2.addWidget(self.markedSecondCatchTitle, 2, 3, 1, 1)
        self.caughtSecondCatchTitle = QtWidgets.QLabel(self.tabEstimator)
        self.caughtSecondCatchTitle.setObjectName("caughtSecondCatchTitle")
        self.gridLayout_2.addWidget(self.caughtSecondCatchTitle, 0, 3, 2, 1)
        self.tabBox.addTab(self.tabEstimator, "")
        self.tabSimulator = QtWidgets.QWidget()
        self.tabSimulator.setObjectName("tabSimulator")
        self.gridLayout_4 = QtWidgets.QGridLayout(self.tabSimulator)
        self.gridLayout_4.setObjectName("gridLayout_4")
        self.checkBoxTagLoss = QtWidgets.QCheckBox(self.tabSimulator)
        font = QtGui.QFont()
        font.setFamily("Yu Gothic UI Semibold")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.checkBoxTagLoss.setFont(font)
        self.checkBoxTagLoss.setChecked(False)
        self.checkBoxTagLoss.setObjectName("checkBoxTagLoss")
        self.gridLayout_4.addWidget(self.checkBoxTagLoss, 5, 3, 1, 2)
        self.migrationRateBox = QtWidgets.QDoubleSpinBox(self.tabSimulator)
        self.migrationRateBox.setEnabled(False)
        self.migrationRateBox.setMinimum(-1.0)
        self.migrationRateBox.setMaximum(1.0)
        self.migrationRateBox.setSingleStep(0.01)
        self.migrationRateBox.setProperty("value", 0.0)
        self.migrationRateBox.setObjectName("migrationRateBox")
        self.gridLayout_4.addWidget(self.migrationRateBox, 2, 6, 1, 1)
        self.totalPopulationInput = QtWidgets.QSpinBox(self.tabSimulator)
        self.totalPopulationInput.setAcceptDrops(False)
        self.totalPopulationInput.setToolTipDuration(5)
        self.totalPopulationInput.setWhatsThis("")
        self.totalPopulationInput.setAccessibleName("")
        self.totalPopulationInput.setMinimum(1)
        self.totalPopulationInput.setMaximum(1000000)
        self.totalPopulationInput.setProperty("value", 1)
        self.totalPopulationInput.setObjectName("totalPopulationInput")
        self.gridLayout_4.addWidget(self.totalPopulationInput, 0, 2, 1, 1)
        self.openPopulationMoralityInput = QtWidgets.QDoubleSpinBox(self.tabSimulator)
        self.openPopulationMoralityInput.setEnabled(True)
        self.openPopulationMoralityInput.setMaximum(1.0)
        self.openPopulationMoralityInput.setSingleStep(0.01)
        self.openPopulationMoralityInput.setObjectName("openPopulationMoralityInput")
        self.gridLayout_4.addWidget(self.openPopulationMoralityInput, 1, 2, 1, 1)
        self.totalPopulationTitle = QtWidgets.QLabel(self.tabSimulator)
        font = QtGui.QFont()
        font.setFamily("Yu Gothic UI Semibold")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.totalPopulationTitle.setFont(font)
        self.totalPopulationTitle.setObjectName("totalPopulationTitle")
        self.gridLayout_4.addWidget(self.totalPopulationTitle, 0, 0, 1, 2)
        self.migrationRateSlider = QtWidgets.QSlider(self.tabSimulator)
        self.migrationRateSlider.setToolTipDuration(-1)
        self.migrationRateSlider.setWhatsThis("")
        self.migrationRateSlider.setMinimum(-100)
        self.migrationRateSlider.setMaximum(100)
        self.migrationRateSlider.setProperty("value", 0)
        self.migrationRateSlider.setSliderPosition(0)
        self.migrationRateSlider.setOrientation(QtCore.Qt.Horizontal)
        self.migrationRateSlider.setTickPosition(QtWidgets.QSlider.TicksBothSides)
        self.migrationRateSlider.setTickInterval(1)
        self.migrationRateSlider.setObjectName("migrationRateSlider")
        self.gridLayout_4.addWidget(self.migrationRateSlider, 2, 4, 1, 2)
        self.migrationDistanceSlider = QtWidgets.QSlider(self.tabSimulator)
        self.migrationDistanceSlider.setToolTipDuration(-1)
        self.migrationDistanceSlider.setWhatsThis("")
        self.migrationDistanceSlider.setMaximum(100)
        self.migrationDistanceSlider.setProperty("value", 50)
        self.migrationDistanceSlider.setSliderPosition(50)
        self.migrationDistanceSlider.setOrientation(QtCore.Qt.Horizontal)
        self.migrationDistanceSlider.setTickPosition(QtWidgets.QSlider.TicksBothSides)
        self.migrationDistanceSlider.setTickInterval(1)
        self.migrationDistanceSlider.setObjectName("migrationDistanceSlider")
        self.gridLayout_4.addWidget(self.migrationDistanceSlider, 1, 4, 1, 2)
        self.checkBoxClosedPopulation = QtWidgets.QCheckBox(self.tabSimulator)
        font = QtGui.QFont()
        font.setFamily("Yu Gothic UI Semibold")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.checkBoxClosedPopulation.setFont(font)
        self.checkBoxClosedPopulation.setToolTipDuration(-1)
        self.checkBoxClosedPopulation.setWhatsThis("")
        self.checkBoxClosedPopulation.setAccessibleName("")
        self.checkBoxClosedPopulation.setAccessibleDescription("")
        self.checkBoxClosedPopulation.setChecked(True)
        self.checkBoxClosedPopulation.setTristate(False)
        self.checkBoxClosedPopulation.setObjectName("checkBoxClosedPopulation")
        self.gridLayout_4.addWidget(self.checkBoxClosedPopulation, 0, 3, 1, 1)
        self.migrationRateTitle = QtWidgets.QLabel(self.tabSimulator)
        font = QtGui.QFont()
        font.setFamily("Yu Gothic UI Semibold")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.migrationRateTitle.setFont(font)
        self.migrationRateTitle.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.migrationRateTitle.setWordWrap(False)
        self.migrationRateTitle.setObjectName("migrationRateTitle")
        self.gridLayout_4.addWidget(self.migrationRateTitle, 2, 3, 1, 1)
        self.migrationRateDescription = QtWidgets.QLabel(self.tabSimulator)
        font = QtGui.QFont()
        font.setFamily("Yu Gothic UI Light")
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.migrationRateDescription.setFont(font)
        self.migrationRateDescription.setObjectName("migrationRateDescription")
        self.gridLayout_4.addWidget(self.migrationRateDescription, 2, 7, 1, 1)
        self.stopSimulationButton = QtWidgets.QPushButton(self.tabSimulator)
        self.stopSimulationButton.setEnabled(False)
        font = QtGui.QFont()
        font.setFamily("Yu Gothic UI Semibold")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.stopSimulationButton.setFont(font)
        self.stopSimulationButton.setObjectName("stopSimulationButton")
        self.gridLayout_4.addWidget(self.stopSimulationButton, 7, 7, 1, 1)
        self.migrationDistanceBox = QtWidgets.QDoubleSpinBox(self.tabSimulator)
        self.migrationDistanceBox.setEnabled(False)
        self.migrationDistanceBox.setMaximum(2.0)
        self.migrationDistanceBox.setSingleStep(0.01)
        self.migrationDistanceBox.setProperty("value", 0.5)
        self.migrationDistanceBox.setObjectName("migrationDistanceBox")
        self.gridLayout_4.addWidget(self.migrationDistanceBox, 1, 6, 1, 1)
        self.tagLossTitle = QtWidgets.QLabel(self.tabSimulator)
        font = QtGui.QFont()
        font.setFamily("Yu Gothic UI Semibold")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.tagLossTitle.setFont(font)
        self.tagLossTitle.setObjectName("tagLossTitle")
        self.gridLayout_4.addWidget(self.tagLossTitle, 5, 0, 1, 1)
        self.checkBoxCaptureEqual = QtWidgets.QCheckBox(self.tabSimulator)
        font = QtGui.QFont()
        font.setFamily("Yu Gothic UI Semibold")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.checkBoxCaptureEqual.setFont(font)
        self.checkBoxCaptureEqual.setChecked(True)
        self.checkBoxCaptureEqual.setObjectName("checkBoxCaptureEqual")
        self.gridLayout_4.addWidget(self.checkBoxCaptureEqual, 3, 3, 1, 2)
        self.captureProbabilityTitle = QtWidgets.QLabel(self.tabSimulator)
        font = QtGui.QFont()
        font.setFamily("Yu Gothic UI Semibold")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.captureProbabilityTitle.setFont(font)
        self.captureProbabilityTitle.setObjectName("captureProbabilityTitle")
        self.gridLayout_4.addWidget(self.captureProbabilityTitle, 3, 0, 1, 1)
        self.migrationDistanceTitle = QtWidgets.QLabel(self.tabSimulator)
        font = QtGui.QFont()
        font.setFamily("Yu Gothic UI Semibold")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.migrationDistanceTitle.setFont(font)
        self.migrationDistanceTitle.setObjectName("migrationDistanceTitle")
        self.gridLayout_4.addWidget(self.migrationDistanceTitle, 1, 3, 1, 1)
        self.captureProbabilityInputVaryTwo = QtWidgets.QDoubleSpinBox(self.tabSimulator)
        self.captureProbabilityInputVaryTwo.setEnabled(False)
        self.captureProbabilityInputVaryTwo.setMaximum(1.0)
        self.captureProbabilityInputVaryTwo.setSingleStep(0.01)
        self.captureProbabilityInputVaryTwo.setObjectName("captureProbabilityInputVaryTwo")
        self.gridLayout_4.addWidget(self.captureProbabilityInputVaryTwo, 4, 2, 1, 1)
        self.runSimulationButton = QtWidgets.QPushButton(self.tabSimulator)
        font = QtGui.QFont()
        font.setFamily("Yu Gothic UI Semibold")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.runSimulationButton.setFont(font)
        self.runSimulationButton.setObjectName("runSimulationButton")
        self.gridLayout_4.addWidget(self.runSimulationButton, 7, 8, 1, 1)
        self.subReachSizeTitle = QtWidgets.QLabel(self.tabSimulator)
        font = QtGui.QFont()
        font.setFamily("Yu Gothic UI Semibold")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.subReachSizeTitle.setFont(font)
        self.subReachSizeTitle.setObjectName("subReachSizeTitle")
        self.gridLayout_4.addWidget(self.subReachSizeTitle, 6, 0, 1, 1)
        self.checkBoxOpenPopulation = QtWidgets.QCheckBox(self.tabSimulator)
        font = QtGui.QFont()
        font.setFamily("Yu Gothic UI Semibold")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.checkBoxOpenPopulation.setFont(font)
        self.checkBoxOpenPopulation.setObjectName("checkBoxOpenPopulation")
        self.gridLayout_4.addWidget(self.checkBoxOpenPopulation, 0, 5, 1, 3)
        self.checkBoxVariedSubreach = QtWidgets.QCheckBox(self.tabSimulator)
        font = QtGui.QFont()
        font.setFamily("Yu Gothic UI Semibold")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.checkBoxVariedSubreach.setFont(font)
        self.checkBoxVariedSubreach.setChecked(False)
        self.checkBoxVariedSubreach.setTristate(False)
        self.checkBoxVariedSubreach.setObjectName("checkBoxVariedSubreach")
        self.gridLayout_4.addWidget(self.checkBoxVariedSubreach, 6, 3, 1, 1)
        self.checkBoxNoSubreach = QtWidgets.QCheckBox(self.tabSimulator)
        font = QtGui.QFont()
        font.setFamily("Yu Gothic UI Semibold")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.checkBoxNoSubreach.setFont(font)
        self.checkBoxNoSubreach.setWhatsThis("")
        self.checkBoxNoSubreach.setChecked(True)
        self.checkBoxNoSubreach.setTristate(False)
        self.checkBoxNoSubreach.setObjectName("checkBoxNoSubreach")
        self.gridLayout_4.addWidget(self.checkBoxNoSubreach, 6, 1, 1, 1)
        self.captureProbabilityInput = QtWidgets.QDoubleSpinBox(self.tabSimulator)
        self.captureProbabilityInput.setMaximum(1.0)
        self.captureProbabilityInput.setSingleStep(0.01)
        self.captureProbabilityInput.setObjectName("captureProbabilityInput")
        self.gridLayout_4.addWidget(self.captureProbabilityInput, 3, 2, 1, 1)
        self.mortalityProbabilityTitle = QtWidgets.QLabel(self.tabSimulator)
        font = QtGui.QFont()
        font.setFamily("Yu Gothic UI Semibold")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.mortalityProbabilityTitle.setFont(font)
        self.mortalityProbabilityTitle.setObjectName("mortalityProbabilityTitle")
        self.gridLayout_4.addWidget(self.mortalityProbabilityTitle, 1, 0, 1, 1)
        self.tagLossProbabilityInput = QtWidgets.QDoubleSpinBox(self.tabSimulator)
        self.tagLossProbabilityInput.setEnabled(False)
        self.tagLossProbabilityInput.setMaximum(1.0)
        self.tagLossProbabilityInput.setSingleStep(0.01)
        self.tagLossProbabilityInput.setObjectName("tagLossProbabilityInput")
        self.gridLayout_4.addWidget(self.tagLossProbabilityInput, 5, 2, 1, 1)
        self.checkBoxCaptureRandomPerFish = QtWidgets.QCheckBox(self.tabSimulator)
        font = QtGui.QFont()
        font.setFamily("Yu Gothic UI Semibold")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.checkBoxCaptureRandomPerFish.setFont(font)
        self.checkBoxCaptureRandomPerFish.setObjectName("checkBoxCaptureRandomPerFish")
        self.gridLayout_4.addWidget(self.checkBoxCaptureRandomPerFish, 4, 3, 1, 2)
        self.checkBoxCaptureVary = QtWidgets.QCheckBox(self.tabSimulator)
        font = QtGui.QFont()
        font.setFamily("Yu Gothic UI Semibold")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.checkBoxCaptureVary.setFont(font)
        self.checkBoxCaptureVary.setObjectName("checkBoxCaptureVary")
        self.gridLayout_4.addWidget(self.checkBoxCaptureVary, 3, 5, 1, 2)
        self.numTrialsInput = QtWidgets.QSpinBox(self.tabSimulator)
        self.numTrialsInput.setMinimum(1)
        self.numTrialsInput.setMaximum(1000000)
        self.numTrialsInput.setProperty("value", 1)
        self.numTrialsInput.setObjectName("numTrialsInput")
        self.gridLayout_4.addWidget(self.numTrialsInput, 7, 6, 1, 1)
        self.numTrialsTitle = QtWidgets.QLabel(self.tabSimulator)
        font = QtGui.QFont()
        font.setFamily("Yu Gothic UI Semibold")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.numTrialsTitle.setFont(font)
        self.numTrialsTitle.setObjectName("numTrialsTitle")
        self.gridLayout_4.addWidget(self.numTrialsTitle, 7, 5, 1, 1)
        self.progressBar = QtWidgets.QProgressBar(self.tabSimulator)
        self.progressBar.setEnabled(False)
        self.progressBar.setMaximum(100)
        self.progressBar.setProperty("value", 0)
        self.progressBar.setTextVisible(True)
        self.progressBar.setObjectName("progressBar")
        self.gridLayout_4.addWidget(self.progressBar, 7, 4, 1, 1)
        self.subReachMovementOptionBox = QtWidgets.QDoubleSpinBox(self.tabSimulator)
        self.subReachMovementOptionBox.setEnabled(False)
        self.subReachMovementOptionBox.setMaximum(5.0)
        self.subReachMovementOptionBox.setSingleStep(0.01)
        self.subReachMovementOptionBox.setProperty("value", 0.5)
        self.subReachMovementOptionBox.setObjectName("subReachMovementOptionBox")
        self.gridLayout_4.addWidget(self.subReachMovementOptionBox, 6, 6, 1, 1)
        self.subReachMovementOption = QtWidgets.QSlider(self.tabSimulator)
        self.subReachMovementOption.setToolTipDuration(-1)
        self.subReachMovementOption.setWhatsThis("")
        self.subReachMovementOption.setMaximum(100)
        self.subReachMovementOption.setProperty("value", 50)
        self.subReachMovementOption.setSliderPosition(50)
        self.subReachMovementOption.setOrientation(QtCore.Qt.Horizontal)
        self.subReachMovementOption.setTickPosition(QtWidgets.QSlider.TicksBothSides)
        self.subReachMovementOption.setTickInterval(1)
        self.subReachMovementOption.setObjectName("subReachMovementOption")
        self.gridLayout_4.addWidget(self.subReachMovementOption, 6, 4, 1, 2)
        self.pushButtonShowDistribution = QtWidgets.QPushButton(self.tabSimulator)
        font = QtGui.QFont()
        font.setFamily("Yu Gothic UI Semibold")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.pushButtonShowDistribution.setFont(font)
        self.pushButtonShowDistribution.setObjectName("pushButtonShowDistribution")
        self.gridLayout_4.addWidget(self.pushButtonShowDistribution, 2, 8, 1, 1)
        self.tabBox.addTab(self.tabSimulator, "")
        self.tabResults = QtWidgets.QWidget()
        self.tabResults.setObjectName("tabResults")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.tabResults)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.simulationParameterPrint = QtWidgets.QTextEdit(self.tabResults)
        self.simulationParameterPrint.setObjectName("simulationParameterPrint")
        self.gridLayout_3.addWidget(self.simulationParameterPrint, 0, 0, 1, 6)
        self.saveAllTrialsCheckBox = QtWidgets.QCheckBox(self.tabResults)
        self.saveAllTrialsCheckBox.setEnabled(False)
        self.saveAllTrialsCheckBox.setObjectName("saveAllTrialsCheckBox")
        self.gridLayout_3.addWidget(self.saveAllTrialsCheckBox, 8, 0, 1, 1)
        self.tableRawFishData = QtWidgets.QTableWidget(self.tabResults)
        self.tableRawFishData.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.tableRawFishData.setAlternatingRowColors(True)
        self.tableRawFishData.setObjectName("tableRawFishData")
        self.tableRawFishData.setColumnCount(9)
        self.tableRawFishData.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tableRawFishData.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableRawFishData.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableRawFishData.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableRawFishData.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableRawFishData.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableRawFishData.setHorizontalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableRawFishData.setHorizontalHeaderItem(6, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableRawFishData.setHorizontalHeaderItem(7, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableRawFishData.setHorizontalHeaderItem(8, item)
        self.gridLayout_3.addWidget(self.tableRawFishData, 5, 2, 3, 4)
        self.trialsLabel = QtWidgets.QLabel(self.tabResults)
        self.trialsLabel.setObjectName("trialsLabel")
        self.gridLayout_3.addWidget(self.trialsLabel, 6, 0, 1, 1)
        self.clearDataButton = QtWidgets.QPushButton(self.tabResults)
        self.clearDataButton.setEnabled(False)
        self.clearDataButton.setObjectName("clearDataButton")
        self.gridLayout_3.addWidget(self.clearDataButton, 2, 3, 1, 1)
        self.rawDataTableLabel = QtWidgets.QLabel(self.tabResults)
        self.rawDataTableLabel.setObjectName("rawDataTableLabel")
        self.gridLayout_3.addWidget(self.rawDataTableLabel, 2, 0, 1, 1)
        self.populationGraphCheckBox = QtWidgets.QCheckBox(self.tabResults)
        self.populationGraphCheckBox.setEnabled(False)
        self.populationGraphCheckBox.setChecked(False)
        self.populationGraphCheckBox.setObjectName("populationGraphCheckBox")
        self.gridLayout_3.addWidget(self.populationGraphCheckBox, 2, 4, 1, 1)
        self.simulationReviewer = QtWidgets.QTextEdit(self.tabResults)
        self.simulationReviewer.setObjectName("simulationReviewer")
        self.gridLayout_3.addWidget(self.simulationReviewer, 5, 0, 1, 2)
        self.saveResultsButton = QtWidgets.QPushButton(self.tabResults)
        font = QtGui.QFont()
        font.setFamily("Yu Gothic UI Semibold")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.saveResultsButton.setFont(font)
        self.saveResultsButton.setObjectName("saveResultsButton")
        self.gridLayout_3.addWidget(self.saveResultsButton, 8, 2, 1, 4)
        self.saveSpecificTrialCheckBox = QtWidgets.QCheckBox(self.tabResults)
        self.saveSpecificTrialCheckBox.setEnabled(False)
        self.saveSpecificTrialCheckBox.setObjectName("saveSpecificTrialCheckBox")
        self.gridLayout_3.addWidget(self.saveSpecificTrialCheckBox, 8, 1, 1, 1)
        self.tableRawTestData = QtWidgets.QTableWidget(self.tabResults)
        self.tableRawTestData.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.tableRawTestData.setAlternatingRowColors(True)
        self.tableRawTestData.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectRows)
        self.tableRawTestData.setObjectName("tableRawTestData")
        self.tableRawTestData.setColumnCount(4)
        self.tableRawTestData.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tableRawTestData.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableRawTestData.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableRawTestData.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableRawTestData.setHorizontalHeaderItem(3, item)
        self.gridLayout_3.addWidget(self.tableRawTestData, 7, 0, 1, 2)
        self.refreshResultsButton = QtWidgets.QPushButton(self.tabResults)
        self.refreshResultsButton.setEnabled(False)
        self.refreshResultsButton.setObjectName("refreshResultsButton")
        self.gridLayout_3.addWidget(self.refreshResultsButton, 2, 2, 1, 1)
        self.viewImageButton = QtWidgets.QPushButton(self.tabResults)
        self.viewImageButton.setEnabled(False)
        self.viewImageButton.setObjectName("viewImageButton")
        self.gridLayout_3.addWidget(self.viewImageButton, 2, 5, 1, 1)
        self.loadSimulationNumberInput = QtWidgets.QComboBox(self.tabResults)
        self.loadSimulationNumberInput.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.loadSimulationNumberInput.setAutoFillBackground(False)
        self.loadSimulationNumberInput.setEditable(True)
        self.loadSimulationNumberInput.setCurrentText("")
        self.loadSimulationNumberInput.setMaxCount(29)
        self.loadSimulationNumberInput.setMinimumContentsLength(1)
        self.loadSimulationNumberInput.setObjectName("loadSimulationNumberInput")
        self.gridLayout_3.addWidget(self.loadSimulationNumberInput, 2, 1, 1, 1)
        self.tabBox.addTab(self.tabResults, "")
        self.gridLayout.addWidget(self.tabBox, 0, 0, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1135, 21))
        self.menubar.setObjectName("menubar")
        self.menuMain = QtWidgets.QMenu(self.menubar)
        self.menuMain.setObjectName("menuMain")
        self.menuResults = QtWidgets.QMenu(self.menubar)
        self.menuResults.setObjectName("menuResults")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionUser_Manual = QtWidgets.QAction(MainWindow)
        self.actionUser_Manual.setObjectName("actionUser_Manual")
        self.actionSave_Results = QtWidgets.QAction(MainWindow)
        self.actionSave_Results.setObjectName("actionSave_Results")
        self.actionExit = QtWidgets.QAction(MainWindow)
        self.actionExit.setObjectName("actionExit")
        self.menuMain.addAction(self.actionSave_Results)
        self.menuMain.addAction(self.actionExit)
        self.menuResults.addAction(self.actionUser_Manual)
        self.menubar.addAction(self.menuMain.menuAction())
        self.menubar.addAction(self.menuResults.menuAction())

        self.retranslateUi(MainWindow)
        self.tabBox.setCurrentIndex(1)
        self.loadSimulationNumberInput.setCurrentIndex(-1)
        self.clearResultsScreenButton.clicked.connect(self.resultScreenOne.clear)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "AWRI | Mark Recapture Population Estimator v1.2019"))
        MainWindow.setStatusTip(_translate("MainWindow", "Save test results "))
        self.estimatePopulationButton.setText(_translate("MainWindow", "Estimate Population"))
        self.titleFirstTab.setText(_translate("MainWindow", "Lincoln Peterson (Chapman\'s) Estimator"))
        self.resultScreenOne.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Yu Gothic UI Semibold\'; font-size:10pt; font-weight:600; font-style:normal;\">\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400;\"><br /></p></body></html>"))
        self.resultTitle.setText(_translate("MainWindow", "Results"))
        self.clearResultsScreenButton.setText(_translate("MainWindow", "Clear Results Screen"))
        self.markedFirstCatchTitle.setText(_translate("MainWindow", "# of Fishes Marked in First Catch (M):"))
        self.markedSecondCatchTitle.setText(_translate("MainWindow", "# of Fishes Marked in Second Catch (R):"))
        self.caughtSecondCatchTitle.setText(_translate("MainWindow", "# of Fishes Caught in Second Catch (N):"))
        self.tabBox.setTabText(self.tabBox.indexOf(self.tabEstimator), _translate("MainWindow", "Lincoln-Peterson (Chapman\'s) Estimator"))
        self.checkBoxTagLoss.setStatusTip(_translate("MainWindow", "Chance of fish losing the tags or a tagged fish not being identified correctly."))
        self.checkBoxTagLoss.setText(_translate("MainWindow", "Possible Tag Loss/Misidentification"))
        self.totalPopulationInput.setStatusTip(_translate("MainWindow", "Input your desired fish population in the study reach."))
        self.openPopulationMoralityInput.setStatusTip(_translate("MainWindow", "Probabilty of the fish dying between the first pass and second pass. Range is from 0 to 1.00"))
        self.totalPopulationTitle.setText(_translate("MainWindow", "Total Fish Population in Reach:"))
        self.migrationRateSlider.setToolTip(_translate("MainWindow", "<html><head/><body><p>Change Rate of Migration. At 0, rate of fish leaving reach is highest. At 1, rate of fish entering reach is highest. At .50, rate is balanced.</p></body></html>"))
        self.migrationRateSlider.setStatusTip(_translate("MainWindow", "Direction skew for fish migration. 0 - Maximum downstream fish migration; 0.5 - Balanced upstream/downstream fish migration."))
        self.migrationDistanceSlider.setToolTip(_translate("MainWindow", "<html><head/><body><p>Change Rate of Migration. At 0, rate of fish leaving reach is highest. At 1, rate of fish entering reach is highest. At .50, rate is balanced.</p></body></html>"))
        self.migrationDistanceSlider.setStatusTip(_translate("MainWindow", "0 - Maximum Rate for Fish to Exit the Subreach 0.5 - Balanced Rate for Fish Entering/Exiting Subreach 1 - Maximum Rate for Fish to Enter the Subreach"))
        self.checkBoxClosedPopulation.setToolTip(_translate("MainWindow", "Closed Population: No fish birth/death occurs between each sample taken, as well as no fishes enter or leave the sample subreach area."))
        self.checkBoxClosedPopulation.setStatusTip(_translate("MainWindow", "User must choose whether simulation will have an open or closed population."))
        self.checkBoxClosedPopulation.setText(_translate("MainWindow", "Closed Population"))
        self.migrationRateTitle.setText(_translate("MainWindow", "Migration Skew"))
        self.migrationRateDescription.setText(_translate("MainWindow", "Balanced"))
        self.stopSimulationButton.setText(_translate("MainWindow", "Stop Simulation"))
        self.tagLossTitle.setText(_translate("MainWindow", "Tag Loss Probability:"))
        self.checkBoxCaptureEqual.setText(_translate("MainWindow", "Equal Between Samples"))
        self.captureProbabilityTitle.setText(_translate("MainWindow", "Capture Probability:"))
        self.migrationDistanceTitle.setText(_translate("MainWindow", "Migration Distance"))
        self.captureProbabilityInputVaryTwo.setStatusTip(_translate("MainWindow", "Capture probability of a fish during the second pass"))
        self.runSimulationButton.setStatusTip(_translate("MainWindow", "Start the simulation."))
        self.runSimulationButton.setText(_translate("MainWindow", "Run Simulation"))
        self.subReachSizeTitle.setText(_translate("MainWindow", "Subreach Size:"))
        self.checkBoxOpenPopulation.setStatusTip(_translate("MainWindow", "User must choose whether simulation will have an open or closed population."))
        self.checkBoxOpenPopulation.setText(_translate("MainWindow", "Open Population (Mortality / Migration)"))
        self.checkBoxVariedSubreach.setStatusTip(_translate("MainWindow", "Size of subreach that fish can be caught from 0 - No subreach; 0.5 - 50% of subreach; 1.00 - 100% of subreach"))
        self.checkBoxVariedSubreach.setWhatsThis(_translate("MainWindow", "Fishes are put in 4 zones, 2 of the zones are the only areas where fish can get caught."))
        self.checkBoxVariedSubreach.setText(_translate("MainWindow", "Vary Subreach Size"))
        self.checkBoxNoSubreach.setStatusTip(_translate("MainWindow", "All fishes are in the subreach by default."))
        self.checkBoxNoSubreach.setText(_translate("MainWindow", "Not a Factor"))
        self.captureProbabilityInput.setToolTip(_translate("MainWindow", "Input must be between 0 to 1, inclusve."))
        self.captureProbabilityInput.setStatusTip(_translate("MainWindow", "Probability of capture a fish"))
        self.mortalityProbabilityTitle.setText(_translate("MainWindow", "Mortality Probability:"))
        self.tagLossProbabilityInput.setStatusTip(_translate("MainWindow", "Probabiltiy of the fish losing its tag"))
        self.checkBoxCaptureRandomPerFish.setText(_translate("MainWindow", "Randomize Probability for Each Fish"))
        self.checkBoxCaptureVary.setText(_translate("MainWindow", "Vary Between Samples"))
        self.numTrialsInput.setStatusTip(_translate("MainWindow", "Number of trials user would like to run."))
        self.numTrialsTitle.setText(_translate("MainWindow", "Number of Trials:"))
        self.progressBar.setStatusTip(_translate("MainWindow", "Progress bar"))
        self.subReachMovementOption.setToolTip(_translate("MainWindow", "<html><head/><body><p>Change Rate of Migration. At 0, rate of fish leaving reach is highest. At 1, rate of fish entering reach is highest. At .50, rate is balanced.</p></body></html>"))
        self.subReachMovementOption.setStatusTip(_translate("MainWindow", "Size of subreach to be include. Ex: 0 - 0% of the subreach; 1 encompasses the entire subreach."))
        self.pushButtonShowDistribution.setStatusTip(_translate("MainWindow", "Show migration distribution."))
        self.pushButtonShowDistribution.setText(_translate("MainWindow", "Show Distribution"))
        self.tabBox.setTabText(self.tabBox.indexOf(self.tabSimulator), _translate("MainWindow", "Raw Simulation"))
        self.simulationParameterPrint.setStatusTip(_translate("MainWindow", "Most recent simulation results."))
        self.saveAllTrialsCheckBox.setText(_translate("MainWindow", "Save all trials in this simulation"))
        self.tableRawFishData.setStatusTip(_translate("MainWindow", "Raw data for the selected simulation are shown on this table."))
        self.tableRawFishData.setSortingEnabled(True)
        item = self.tableRawFishData.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Capture Prob (Q1)"))
        item = self.tableRawFishData.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Initial Subreach (S1)"))
        item = self.tableRawFishData.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "Tagged"))
        item = self.tableRawFishData.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "Tag Lost"))
        item = self.tableRawFishData.horizontalHeaderItem(4)
        item.setText(_translate("MainWindow", "Mortality"))
        item.setToolTip(_translate("MainWindow", "1 - Fish is alive. 0 - Fish is dead."))
        item.setWhatsThis(_translate("MainWindow", "<html><head/><body><p><br/></p></body></html>"))
        item = self.tableRawFishData.horizontalHeaderItem(5)
        item.setText(_translate("MainWindow", "Migration Distance"))
        item = self.tableRawFishData.horizontalHeaderItem(6)
        item.setText(_translate("MainWindow", "Capture Prob (Q2)"))
        item = self.tableRawFishData.horizontalHeaderItem(7)
        item.setText(_translate("MainWindow", "Final Subreach (S2)"))
        item = self.tableRawFishData.horizontalHeaderItem(8)
        item.setText(_translate("MainWindow", "Recaught"))
        self.trialsLabel.setText(_translate("MainWindow", "Trials"))
        self.clearDataButton.setStatusTip(_translate("MainWindow", "Clear all Simulation Sets"))
        self.clearDataButton.setText(_translate("MainWindow", "Clear All Saved Data"))
        self.rawDataTableLabel.setText(_translate("MainWindow", "Load Simulation Set:"))
        self.populationGraphCheckBox.setStatusTip(_translate("MainWindow", "Double click on a column below to graph that trial\'s spread for that category. Check this box to include all trials in the graph for that category."))
        self.populationGraphCheckBox.setText(_translate("MainWindow", "Show the Population Spread"))
        self.saveResultsButton.setStatusTip(_translate("MainWindow", "Save test results in the results screen."))
        self.saveResultsButton.setText(_translate("MainWindow", "Save Results"))
        self.saveSpecificTrialCheckBox.setText(_translate("MainWindow", "Save this specific trial"))
        self.tableRawTestData.setStatusTip(_translate("MainWindow", "Results of all trials for this simulation"))
        self.tableRawTestData.setSortingEnabled(True)
        item = self.tableRawTestData.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Est. Pop"))
        item = self.tableRawTestData.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "First Pass Catch"))
        item = self.tableRawTestData.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "Second Pass Catch"))
        item = self.tableRawTestData.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "Recatch"))
        self.refreshResultsButton.setStatusTip(_translate("MainWindow", "Load the data for the test trial # selected. "))
        self.refreshResultsButton.setText(_translate("MainWindow", "Load Data"))
        self.viewImageButton.setStatusTip(_translate("MainWindow", "Show the results in a histogram."))
        self.viewImageButton.setText(_translate("MainWindow", "View Histogram"))
        self.loadSimulationNumberInput.setStatusTip(_translate("MainWindow", "Which simulation would you like to load?"))
        self.tabBox.setTabText(self.tabBox.indexOf(self.tabResults), _translate("MainWindow", "Results"))
        self.menuMain.setTitle(_translate("MainWindow", "File"))
        self.menuResults.setTitle(_translate("MainWindow", "Options"))
        self.actionUser_Manual.setText(_translate("MainWindow", "User Manual"))
        self.actionSave_Results.setText(_translate("MainWindow", "Save Results"))
        self.actionExit.setText(_translate("MainWindow", "Exit"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
